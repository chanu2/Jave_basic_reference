Class 클래스


자바의 모든 클래스와 인터페이스는 컴파일 후 class 파일이 생성됨


Class 클래스는 컴파일 된 class 파일을 로드하여 객체를 동적 로드하고, 정보를 가져오는 메서드가 제공됨


Class.forName("클래스 이름") 메서드로 클래스를 동적으로 로드 함



Class c = Class.forName("java.lang.String");



클래스 이름으로 직접 Class 클래스 가져오기


Class c = String.class;



생성된 인스턴스에서 Class 클래스 가져오기


String s = new String();
Class c = s.getClass();  //Object 메서드


##################################################################################


동적 로딩


컴파일 시에 데이터 타입이 binding 되는 것이 아닌, 실행(runtime) 중에 데이터 타입을 binding 하는 방법


프로그래밍 시에는 문자열 변수로 처리했다가 런타임시에 원하는 클래스를 로딩하여 binding 할 수 있다는 장점


컴파일 시에 타입이 정해지지 않으므로 동적 로딩시 오류가 발생하면 프로그램의 심각한 장애가 발생가능


##################################################################################


Class의 newInstance()메서드로 인스턴스 생성

new 키워드를 사용하지 않고 클래스 정보를 활용하여 인스턴스를 생성할 수 있음


##################################################################################


클래스 정보 알아보기


reflection 프로그래밍 : Class 클래스를 사용하여 클래스의 정보(생성자, 변수, 메서드)등을 알 수 있고 인스턴스를 생성하고,
메서드를 호출하는 방식의 프로그래밍


로컬 메모리에 객체 없는 경우, 원격 프로그래밍, 객체의 타입을 알 수 없는 경우에 사용


java.lang.reflect 패키지에 있는 클래스를 활용하여 프로그래밍


일반적으로 자료형을 알고 있는 경우엔 사용하지 않음



##################################################################################

간략한 설명

String,person,이런 타입을 선언해서 쓰는데 컴파일 타임에 이 클래스가 local에 존재하는지 보고 바인딩이되서
이 타입으로 정해져서 변수로 쓰인다. 그런데 커파일 타임에는 어떤 클래스를 바인딩시킬 줄 모른다 loading시킬지모르고
실질적으로 런타임될때 돌아갈떄 동적으로 필요한 클래스를 로딩시켜서 맵핑을 시키는것이다.

예를 들어 jdbc 드라이버다(DB와 연결하는) 돌아가기 전까지 저장된 db데이터나 등을 읽어서 DB의 라이브러리가 무엇이될지 모른다
그럴떄 일단 변수로가지고 있다가 실제적으로 이 DB가 오라클이다, 하면 오라클 드라이브 NAME을 넣준다(String 변수에)

Class.forName("");  에 변수(오라클 드라이브 NAME)를 넣어주면 동적으로 드라이버가 로딩된다. 이런 메커니즘이다
컴파일 시에 데이터 타입이 binding 되는 것이 아닌, 실행(runtime) 중에 데이터 타입을 binding 하는 방법이기 때문에 이름을 잘못 입력하면 없는 클래스이므로 프로그램이 다운 될 수 있다.
