여러 인스턴스에서 고통으로 사용하는 변수를 선언하자 - static 변수

공통으로 사용하는 변수가 필요한 경우


여러 인스턴스가 공유하는 기준 값이 필요한 경우


학생마다 새로운 학번 생성


카드회사에서 카드를 새로 발급할때마다 새로운 카드 번호를 부여


회사에 사원이 입사할때 마다 새로운 사번이 필요한



#####################################

하드디스크 안에 program이 있고 우리가 program을 구동 시키면  program은 메모리에 올라간다(메모리에 올라갔을 때 상태를 process라 한다 process 가 도는 게아니라 --->thread에서 돈다
program이 메모리에 올라갈 떄 크게 두가지 영역으로 나뉘는데 펏번째 code 부분과 data,상수,static이라 부르는영역으로 나뉜다    

code 부분에는 명령집합인 instructionset는 line by line으로 동작

data 부분에는 처음에 메모리에 로딩이 될 때 처음 부터 메모리를 잡는 데이타가 있다 상수,리터럴, 이 잡히고 static변수도 잡힌다





######################################
static 변수 선언과 사용하기
static int serialNum;


인스턴스가 생성될 때 만들어지는 변수가 아닌, 처음 프로그램이 메모리에 로딩될 때 메모리를 할당


클래스 변수, 정적변수라고도 함(vs. 인스턴스 변수)


인스턴스 생성과 상관 없이 사용 가능하므로 클래스 이름으로 직접 참조


Student.serialNum = 100;



########################################
변수의 유효 범위와 메모리


변수의 유효 범위(scope)와 생성과 소멸(life cycle)은 각 변수의 종류마다 다름


지역변수, 멤버 변수, 클래스 변수는 유효범위와 life cycle, 사용하는 메모리도 다름

static 변수는 프로그램이 메모리에 있는 동안 계속 그 영역을 차지하므로 너무 큰 메모리를 할당하는 것은 좋지 않음


클래스 내부의 여러 메서드에서 사용하는 변수는 멤버 변수로 선언하는 것이 좋음


멤버 변수가 너무 많으면 인스턴스 생성 시 쓸데없는 메모리가 할당됨


상황에 적절하게 변수를 사용해야 함
